{"version":3,"sources":["Api.js","common/Loading.js","common/SearchForm.js","companies/CompanyCard.js","companies/CompanyList.js","UserContext.js","jobs/JobCard.js","jobs/JobCardList.js","companies/CompanyDetail.js","LocalStorage.js","common/PrivateRoute.js","Home.js","jobs/JobList.js","Profile.js","Login.js","Signup.js","Routes.js","Navbar.js","App.js","serviceWorker.js","index.js"],"names":["BASE_URL","process","Jobly","endpoint","data","method","console","debug","url","headers","Authorization","this","token","params","axios","error","response","message","Array","isArray","handle","request","res","company","name","companies","title","jobs","username","user","id","Loading","SearchForm","doSearch","useState","search","setSearch","handleSubmit","e","preventDefault","log","trim","className","onSubmit","onChange","target","value","placeholder","color","CompanyCard","logoUrl","description","to","src","alt","CompanyList","setCompanies","getCompanies","useEffect","length","map","c","UserContext","React","createContext","JobCard","job","equity","applied","setApplied","useContext","hasApplied","applyToJob","companyName","salary","onClick","disabled","JobCardList","j","CompanyDetail","useParams","setCompany","getCompany","LocalStorage","JSON","parse","localStorage","getItem","setItem","stringify","clear","PrivateRoute","exact","path","children","getLocalStorage","Home","currentUser","JobList","setJobs","getJobs","Profile","setCurrentUser","email","firstName","lastName","password","formData","setFormData","setError","handleChange","f","patchUser","er","onFocus","for","type","autoFocus","Login","login","form","setForm","history","useHistory","result","success","push","Signup","signup","Routes","NavBar","logout","isOpen","setIsOpen","href","op","navbar","nav","inNavbar","caret","right","App","isLoading","setIsLoading","applicationIDs","setApplicationIDs","setToken","setLocalStorage","indexOf","jwt","decode","getUser","curUser","applications","Provider","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.e2f2801c.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n\n\n/* \n  json-server will give you CRUD endpoints on snacks and drinks.\n  Here we've provided you with a single action to get all drinks.\n\n  You'll need to add to this class as you build features for the app.\n*/\n\nclass Jobly {\n  static token \n  \n  static async request(endpoint, data = {}, method = \"get\") {\n    console.debug(\"API Call:\", endpoint, data, method);\n\n    //there are multiple ways to pass an authorization token, this is how you pass it in the header.\n    //this has been provided to show you another way to pass the token. you are only expected to read this code for this project.\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = { Authorization: `Bearer ${this.token}` }\n    const params = (method === \"get\")\n        ? data\n        : {}\n\n    try {\n      return (await axios({ url, method, data, params, headers })).data\n    } catch (err) {\n      console.error(\"API Error:\", err.response)\n      let message = err.response.data.error.message\n      throw Array.isArray(message) ? message : [message]\n    }\n  }\n\n  // Individual API routes\n  /** Get details on a company by handle. */\n\n  static async getCompany(handle) {\n    let res = await this.request(`companies/${handle}`)\n    return res.company;\n  }\n\n  static async getCompanies(name) {\n    let res = await this.request('companies', {name})\n    return res.companies;\n  }\n\n  static async getJobs(title) {\n    let res = await this.request('jobs', { title })\n    return res.jobs;\n  }\n\n  static async getUser(username) {\n    let res = await this.request(`users/${username}`)\n    return res.user\n  }\n\n  static async patchUser(username, data) {\n    let res = await this.request(`users/${username}`, data, 'patch')\n    return res.user\n  }\n\n  static async applyToJob(username, id) {\n    await this.request(`users/${username}/jobs/${id}`, {}, \"post\");\n  }\n\n\n  //unauth routes\n  //allows for login and signup -> returns token that is stored in this class\n  static async login(user) {\n    let res = await this.request(`auth/token`, user, 'POST')\n    return res.token;\n  }\n  static async signup(user) {\n    let res = await this.request(`auth/register`, user, 'POST')\n    return res.token;\n  }\n}\n\nexport default Jobly;\n","import React from \"react\";\n\nexport default function Loading() {\n    return (\n        <div>\n            Loading...\n        </div>\n    )\n}","import React, { useState } from \"react\"\nimport { InputGroup, Button, Input, Form } from \"reactstrap\"\n\n\nexport default function SearchForm({doSearch}) {\n    const [search, setSearch] = useState(\"\")\n\n    function handleChange(e) {\n        setSearch(e.target.value)\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        console.log('grabbing ',search)\n        doSearch(search.trim())\n        setSearch(search.trim())\n    }\n\n\n    return (\n        <div className=\"SearchForm mb-3\">\n                <Form onSubmit={handleSubmit}>\n                    <InputGroup onSubmit={handleSubmit}>\n                        <Input \n                        onChange={handleChange}\n                            placeholder=\"Enter search term...\"\n                        />\n                        <Button color=\"primary\">Submit</Button>\n                    </InputGroup>\n                </Form>\n               \n            </div>\n    )\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function CompanyCard({ handle, name, logoUrl, description}) {\n\n    return (\n        <>  \n        <Link to={`/companies/${handle}`} className=\"CompaniesCard card\">\n            <div className=\"cardBody\">\n                <div className=\"cardHeader\">\n                    <h4>{name}</h4> \n                    <img src={logoUrl} alt=\"\" />\n                </div>\n                <p><small>{description}</small></p>\n            </div>\n        </Link>\n        </>\n    )\n\n}","import React, { useEffect, useState } from \"react\";\nimport Loading from \"../common/Loading\";\nimport './CompanyList.css'\nimport Jobly from \"../Api\";\nimport SearchForm from \"../common/SearchForm\";\nimport CompanyCard from \"./CompanyCard\";\n\nexport default function CompanyList() {\n    const [companies, setCompanies] = useState([])\n\n    useEffect(() => {\n        search()\n    }, [])\n\n    async function search(name) {\n        let companies = await Jobly.getCompanies(name)\n        setCompanies(companies)\n      }\n\n    if (!companies) return <Loading />\n\n    return (\n        <div className=\"Companies col-md-8\">\n            <SearchForm doSearch={search} />\n            {companies.length\n            ? (\n                <div className=\"CompanyList-list\">\n                  {companies.map(c => (\n                      <CompanyCard\n                          key={c.handle}\n                          handle={c.handle}\n                          name={c.name}\n                          description={c.description}\n                          logoUrl={c.logoUrl}\n                      />\n                  ))}\n                </div>\n            ) : (\n                <p className=\"lead\">Sorry, no results were found!</p>\n            )}\n        </div>\n    )\n}","import React from \"react\";\n\nconst UserContext = React.createContext();\n\nexport default UserContext;","import React, { useState, useContext, useEffect } from \"react\"\nimport UserContext from \"../UserContext\";\n\nexport default function JobCard({job}) {\n    let {id} = job\n    let { equity } = job\n    const [applied, setApplied] = useState()\n    const { hasApplied, applyToJob } = useContext(UserContext);\n\n    useEffect(function updateApplied() {\n        setApplied(hasApplied(id))\n\n    }, [id, hasApplied])\n\n    function handleApply(e) {\n        if (hasApplied(id)) return;\n        applyToJob(id);\n        setApplied(true);\n    }\n    \n    return (\n        <div className=\"JobsCard card\" key={job.id}>\n            <div className=\"card-body\">\n                <h4 className=\"card-title\">\n                    {job.title}\n                </h4>\n                <h5>{job.companyName}</h5>\n                <p><small>SALARY: {job.salary}</small></p>\n                {equity > 0 && <p><small>EQUITY: {job.equity}</small></p>}\n                <button \n                    className=\"btn btn-danger float-right\" \n                    id={job.id}\n                    onClick={handleApply}\n                    disabled={applied}\n                >\n                {!applied ? 'APPLY' : 'APPLIED'}\n                </button>\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport './Jobs.css'\nimport JobCard from \"./JobCard\";\n\nexport default function JobCardList({jobs}) {\n\n    return (\n        <div className=\"JobCardList\">\n            <div className=\"JobsList\">\n                {jobs.map(j => (\n                    <JobCard job={j} key={j.id}/>\n                ))}\n            </div>\n        </div>\n    )\n}","import React, { useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport Jobly from \"../Api\"\nimport JobCardList from \"../jobs/JobCardList\"\nimport Loading from \"../common/Loading\"\n\nfunction CompanyDetail() {\n    const { handle }  = useParams()\n\n    const [company, setCompany] = useState(null)\n\n    useEffect(() => {\n        async function getCompany() {\n            setCompany(await Jobly.getCompany(handle))\n        }\n        getCompany()\n    }, [handle])\n\n    if (!company) return <Loading />\n\n    return (\n        <div className=\"CompanyDetail\">\n            <h4>{company.name}</h4>\n            <p>{company.description}</p>\n            <JobCardList jobs={company.jobs}/>\n        </div>\n        \n    )\n\n}\n\nexport default CompanyDetail","class LocalStorage{\n    static getLocalStorage() {\n        try {\n            const user = JSON.parse(localStorage.getItem('token'));\n            return user\n        } catch (error) {\n            return false\n        }\n    }\n    static setLocalStorage(token) {\n        localStorage.setItem('token', JSON.stringify(token))   \n    }\n    static emptyLocalStorage() {\n        localStorage.clear()\n    }\n}\nexport default LocalStorage","import React from \"react\"\nimport { Route, Redirect } from \"react-router-dom\"\nimport LocalStorage from \"../LocalStorage\";\n\nexport default function PrivateRoute({ exact, path, children}) {\n    \n    if(!LocalStorage.getLocalStorage()) {\n        return <Redirect to='login' />\n    }\n\n    return (\n        <Route exact={exact} path={path}>\n          {children}\n        </Route>\n    );\n}","import React, { useContext } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport UserContext from \"./UserContext\" \n\nexport default function Home() {\n    const { currentUser } = useContext(UserContext);\n    if(currentUser) {\n        return (\n            <div className=\"col-md-6 col-lg-4 text-center\">\n                <h2>Jobly</h2>\n                <p>All the jobs in one, convenient place</p>\n                <h3>Welcome back {currentUser.username} !</h3>\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"col-md-6 col-lg-4 text-center\">\n                <h2 className=\"fw-bolder\">Jobly</h2>\n                <p>All the jobs in one, convenient place</p>\n                <div className=\"d-flex justify-content-around\">\n                    <Link to=\"/login\">\n                        <button className=\"btn btn-primary\">Login</button>\n                    </Link>\n                    <Link to=\"/signup\">\n                        <button className=\"btn btn-primary\">Sign up</button>\n                    </Link>\n                </div>\n            </div>\n        )\n\n    }\n}","import React, { useEffect, useState } from \"react\";\nimport Loading from \"../common/Loading\";\nimport SearchForm from \"../common/SearchForm\";\nimport JobCardList from \"./JobCardList\";\nimport './Jobs.css'\nimport Jobly from '../Api.js'\n\nexport default function JobList() {\n    const [jobs, setJobs] = useState(null)\n\n    useEffect(() => {\n       search()\n    }, [])\n\n    async function search(title) {\n        let jobs = await Jobly.getJobs(title)\n        setJobs(jobs)\n    }\n\n    if (!jobs) return <Loading />\n\n    return (\n        <div className=\"JobList col-md-8\">\n            <SearchForm doSearch={search} />\n            {jobs.length ? <JobCardList jobs={jobs} />\n            : <p>Sorry, no results were found!</p>\n            }\n        </div>\n    )\n}","import React, { useState, useContext } from \"react\"\nimport { Form, Button, Input, FormGroup, Label, Card } from \"reactstrap\"\nimport Jobly from \"./Api.js\"\nimport UserContext from './UserContext'\n\n\nexport default function Profile() {\n    const { currentUser, setCurrentUser } = useContext(UserContext)\n\n    const [formData, setFormData] = useState({\n        email: currentUser.email,\n        firstName: currentUser.firstName,\n        lastName: currentUser.lastName,\n        username: currentUser.username,\n        password: ''\n    })\n\n    const [error, setError] = useState(false)\n    \n    function handleChange(e) {\n        const { name, value } = e.target\n        setFormData(f => ({\n            ...f,\n            [name]: value\n        })) \n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n        try {\n            let data = {\n                firstName: formData.firstName,\n                lastName: formData.lastName,\n                email: formData.email,\n                password: formData.password\n            }\n            let user = await Jobly.patchUser(currentUser.username, data)\n            setCurrentUser(user)\n        } catch (error) {\n            setError(er => (er = [error]))\n        }\n    }\n\n    function handleFocus() {\n        setError(er => (er = []))\n    }\n\n\n    return (\n        <div className=\"col-md-6 col-lg-4\">\n            <h3>Profile</h3>\n            {error.length ? <span>{error}</span> : ''}\n            <Card className=\"p-4\">\n            <Form onSubmit={handleSubmit} onFocus={handleFocus}>\n                <FormGroup>\n                <Label for=\"userName\">Username</Label>\n                <Input\n                    id=\"userName\"\n                    name=\"userName\"\n                    value={formData.username}\n                    type=\"text\"\n                    disabled\n                />\n                </FormGroup>\n                <FormGroup>\n                <Label for=\"firstName\">First Name</Label>\n                <Input\n                    id=\"firstName\"\n                    name=\"firstName\"\n                    value={formData.firstName}\n                    type=\"text\"\n                    onChange={handleChange}\n                    autoFocus\n                />\n                </FormGroup>\n                <FormGroup>\n                <Label for=\"lastName\">Last Name</Label>\n                <Input\n                    id=\"lastName\"\n                    name=\"lastName\"\n                    value={formData.lastName}\n                    onChange={handleChange}\n                    type=\"text\"\n                \n                />\n                </FormGroup>\n                <FormGroup>\n                <Label for=\"email\">Email</Label>\n                <Input\n                    id=\"email\"\n                    name=\"email\"\n                    value={formData.email}\n                    onChange={handleChange}\n                    type=\"text\"\n                \n                />\n                </FormGroup>\n                <FormGroup>\n                <Label for=\"password\">Confirm password to make changes:</Label>\n                <Input\n                    id=\"password\"\n                    name=\"password\"\n                    value={formData.password}\n                    onChange={handleChange}\n                    type=\"password\"\n                />\n                </FormGroup>\n                <Button color=\"primary\" className=\"btn-block mr-1 mt-1 btn-lg\" >Submit</Button>\n            </Form>\n            </Card>\n        </div>\n    )\n}","import React, { useState } from \"react\";\nimport { Form, Button, Input, FormGroup, Label, Card } from \"reactstrap\";\nimport { useHistory } from 'react-router-dom'\nexport default function Login({ login }) {\n    const INITIAL_STATE ={\n        username: '',\n        password: ''\n    }\n    const [form, setForm] = useState(INITIAL_STATE)\n    const [error, setError] = useState(false)\n    const history = useHistory()\n\n    function handleFocus() {\n        setError([])\n    }\n\n\n    function handleChange(e) {\n        const { name, value } = e.target\n        setForm(f => ({\n            ...f,\n            [name]: value\n        })) \n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n        let result = await login(form)    \n        if(result.success) {\n            history.push('/companies')\n        } else {\n            setError(result.error)\n        }\n    }\n\n\n    return (\n        <div className=\"col-md-6 col-lg-4\">\n            <h3>Login</h3>\n            {error.length ? <span>{error}.</span> : ''}\n            <Card className=\"p-4\">\n            <Form onSubmit={handleSubmit} onFocus={handleFocus}>\n                <FormGroup>\n                <Label for=\"username\">Username</Label>\n                <Input\n                    id=\"username\"\n                    name=\"username\"\n                    value={form.username}\n                    type=\"text\"\n                    onChange={handleChange}\n                    autoFocus\n                />\n                </FormGroup>\n                <FormGroup>\n                <Label for=\"password\">Password</Label>\n                <Input\n                    id=\"password\"\n                    name=\"password\"\n                    onChange={handleChange}\n                    value={form.password}\n                    type=\"password\"\n                />\n                </FormGroup>\n                <Button color=\"primary\" className=\"btn-block mr-1 mt-1 btn-lg\" >Submit</Button>\n            </Form>\n            </Card>\n        </div>\n    )\n}","import React, { useState } from \"react\";\nimport { Form, Button, Input, FormGroup, Label, Card } from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Signup({ signup }) {\n    const INITIAL_STATE ={\n        username: '',\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: ''\n    }\n    const [form, setForm] = useState(INITIAL_STATE)\n    const [error, setError] = useState(false)\n    const history = useHistory()\n    \n\n    function handleChange(e) {\n        const { name, value } = e.target\n        setForm(f => ({\n            ...f,\n            [name]: value\n        })) \n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n        let result = await signup(form)    \n        if(result.success) {\n            history.push('/companies')\n        } else {\n            setError(result.error)\n        }\n    }\n\n    function handleFocus() {\n        setError([])\n    }\n\n\n    return (\n        <div className=\"col-md-6 col-lg-4\">\n            <h3>Sign Up</h3>\n            {error.length ? <span>{error}</span> : ''}\n            <Card className=\"p-4\">\n            <Form onSubmit={handleSubmit} onFocus={handleFocus}>\n                <FormGroup>\n                <Label for=\"username\">Username</Label>\n                <Input\n                    id=\"username\"\n                    name=\"username\"\n                    type=\"text\"\n                    value={form.username}\n                    onChange={handleChange}\n                    autoFocus\n                />\n                </FormGroup>\n                <FormGroup>\n                <Label for=\"password\">Password</Label>\n                <Input\n                    id=\"password\"\n                    name=\"password\"\n                    type=\"password\"\n                    value={form.password}\n                    onChange={handleChange}\n                />\n                </FormGroup>\n                <FormGroup>\n                <Label for=\"firstName\">First Name</Label>\n                <Input\n                    id=\"firstName\"\n                    name=\"firstName\"\n                    type=\"text\"\n                    value={form.firstName}\n                    onChange={handleChange}\n                />\n                </FormGroup>\n                <FormGroup>\n                <Label for=\"lastName\">Last Name</Label>\n                <Input\n                    id=\"lastName\"\n                    name=\"lastName\"\n                    type=\"text\" \n                    value={form.lastName}\n                    onChange={handleChange}\n                />\n                </FormGroup>\n                <FormGroup>\n                <Label for=\"email\">Email</Label>\n                <Input\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"text\"\n                    value={form.email}\n                    onChange={handleChange}\n                />\n                </FormGroup>\n                <Button color=\"primary\" className=\"btn-block mr-1 mt-1 btn-lg\" >Submit</Button>\n            </Form>\n            </Card>\n        </div>\n    )\n}\n","import { Switch, Route } from \"react-router-dom\";\nimport React from \"react\";\nimport CompanyList from \"./companies/CompanyList\";\nimport CompanyDetail from \"./companies/CompanyDetail\";\nimport PrivateRoute from \"./common/PrivateRoute\";\nimport Home from \"./Home\";\nimport JobList from \"./jobs/JobList\";\nimport Profile from \"./Profile\";\nimport Login from \"./Login\";\nimport Signup from \"./Signup\";\n\nexport default function Routes({ login, signup }) {  \n    return (\n        <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/login\">\n                <Login login={login}/>\n            </Route>\n            <Route exact path=\"/signup\">\n              <Signup signup={signup}/>\n            </Route>\n            <PrivateRoute exact path=\"/companies\">\n              <CompanyList />\n            </PrivateRoute>\n            <PrivateRoute exact path=\"/companies/:handle\">\n              <CompanyDetail />\n            </PrivateRoute>\n            <PrivateRoute exact path=\"/jobs\">\n              <JobList />\n            </PrivateRoute>\n            <PrivateRoute exact path=\"/profile\">\n              <Profile />\n            </PrivateRoute>\n        </Switch>\n    )\n}","import React, { useState, useContext } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport UserContext from './UserContext'\nimport './Navbar.css'\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem } from 'reactstrap';\n\nfunction NavBar({ logout }) {\n  const [ isOpen, setIsOpen ] = useState(true)\n  const { currentUser } = useContext(UserContext)\n\n  function toggle() {\n    setIsOpen(op => (op = !op))\n  }\n\n  function doLogout() {\n    logout()\n  }\n\n  if (!currentUser) {\n    return (\n      <div>\n        <Navbar className=\"Navigation navbar navbar-expand-md\">\n          <NavbarBrand href=\"/\">JOBLY</NavbarBrand>\n          <Nav className=\"ml-auto\" navbar>\n            <NavItem>\n              <NavLink to=\"/login\">Log in</NavLink>      \n            </NavItem>\n            <NavItem>\n              <NavLink to=\"/signup\">Sign up</NavLink>\n            </NavItem>\n          </Nav>\n        </Navbar>\n      </div>\n\n    )\n  } else {\n\n    return (\n      <div>\n        <Navbar className=\"Navigation navbar navbar-expand-md\">\n          <NavbarBrand href=\"/\">JOBLY</NavbarBrand>\n          <NavbarToggler onClick={toggle} />\n          <Collapse isOpen={!isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink to=\"/companies\">Companies</NavLink>      \n              </NavItem>\n              <NavItem>\n                <NavLink to=\"/jobs\">Jobs</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink to=\"/profile\">Profile</NavLink>\n              </NavItem>\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret>\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem>\n                    <NavItem>\n                      <NavLink to=\"/\" onClick={doLogout}>Logout {currentUser.username}</NavLink>\n                    </NavItem>\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Nav>\n          </Collapse>\n        </Navbar>\n    </div>\n  )\n}\n\n}\n\nexport default NavBar;\n","import React, { useEffect, useState } from \"react\";\nimport './App.css'\nimport Jobly from \"./Api\";\nimport Routes from \"./Routes\";\nimport NavBar from \"./Navbar\";\nimport LocalStorage from \"./LocalStorage\";\nimport UserContext from './UserContext'\n\nimport jwt from \"jsonwebtoken\";\nimport Loading from \"./common/Loading\";\n\n\nfunction App() { \nconst [isLoading, setIsLoading] = useState(false);\nconst [currentUser, setCurrentUser] = useState(null);\nconst [applicationIDs, setApplicationIDs] = useState([]);\nconst [token, setToken] = useState(LocalStorage.getLocalStorage());\n\n\n\nuseEffect(() => {\n  async function getUser() {\n    if (token) {\n      let { username }  = jwt.decode(token)\n      Jobly.token = token\n      let curUser = await Jobly.getUser(username)\n      setCurrentUser(curUser)\n      console.log(curUser.applications)\n      setApplicationIDs(curUser.applications)\n    }\n    setIsLoading(false)\n\n  }\n  getUser()\n}, [token])\n\nasync function login(form) {\n  // got a user logging in  => grab their token and put in localstorage\n  try {\n    let token = await Jobly.login(form) \n    setToken(token)\n    LocalStorage.setLocalStorage(token)\n    return { success: true }\n  } catch (error) {\n    return { success: false, error }\n  }\n}\n\nasync function signup(form) {\n  // got a user signing up => grab their token and put in localstorage\n  try {\n    let token = await Jobly.signup(form) \n    setToken(token)\n    LocalStorage.setLocalStorage(token)\n    return { success: true }\n  } catch (error) {\n    return { success: false, error }\n  }\n}\n\nfunction hasApplied(id) {\n  return (applicationIDs.indexOf(id) > -1 ? true : false)\n}\n\nfunction applyToJob(id) {\n  console.log(applicationIDs, hasApplied(id))\n  if (hasApplied(id)) return\n    Jobly.applyToJob(currentUser.username, id)\n    setApplicationIDs([...applicationIDs, id])\n}\n\nfunction logout() {\n  LocalStorage.setLocalStorage(null)\n  setCurrentUser(null)\n}\n\nif (isLoading) {\n    return <Loading />\n  }\n\n  return (\n    <UserContext.Provider value={{currentUser, setCurrentUser, hasApplied, applyToJob}}>\n    <div className=\"App\">\n        <NavBar logout={logout} />\n        <main className=\"pt-5\">\n         <Routes login={login} signup={signup}/>\n        </main>\n    </div>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}